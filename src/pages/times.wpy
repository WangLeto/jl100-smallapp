<style lang="less">
@import "../style/times";
</style>
<template>
  <view class="page__hd">
    <view class="page__title">频次设置</view>
    <view class="page__desc">自定义频次</view>
  </view>
  <view class="page__bd">
    <view class="weui-cells__title">数量分级设置</view>
    <view class="table">
      <view class="header row">
        <view class="num">数量</view>
        <view class="text">文字</view>
        <view class="del-view">删除</view>
        <view class="add-view">添加</view>
      </view>
      <scroll-view scroll-y>
        <view class="row">
          <view class="num" style="color: #666;">0</view>
          <input type="text" class="text" value="{{times[0].text}}"/>
          <view class="del-view">
            <button class="op-btn" style="box-shadow: none" disabled @tap="del">-</button>
          </view>
          <view class="add-view">
            <button class="op-btn" @tap="add({{index + 1}})">+</button>
          </view>
        </view>
        <view class="row {{index === timesSlice.length - 1 ? 'last-row' : ''}}" wx:for="{{timesSlice}}"
              wx:key="{{item.num}}">
          <view class="num">
            <input class="num-input" type="number" value="{{item.num}}"/>
          </view>
          <view class="text">
            <input class="text-input" type="text" value="{{item.text}}"/>
          </view>
          <view class="del-view">
            <button class="op-btn" @tap="del({{index + 1}})">-</button>
          </view>
          <view class="add-view">
            <button class="op-btn" @tap="add({{index + 1}})">+</button>
          </view>
        </view>
      </scroll-view>
      <view class="weui-media-box__info"> 点击数量、文字进行编辑</view>
    </view>
    <view class="button-sp-area">
      <button @tap="submit">保存</button>
    </view>
  </view>
</template>
<script>
import wepy from 'wepy';
import _ from 'lodash';
import SM from '../utils/settingManager';

export default class Times extends wepy.page {
  data = {
    times: [{
      num: 0,
      text: '00'
    }, {
      num: 123,
      text: '11'
    }, {
      num: 222,
      text: '22222222'
    }]
  };
  computed = {
    timesSlice() {
      return this.times.slice(1);
    }
  };
  methods = {
    del(e) {
      this.times.splice(e, 1);
    },
    add(e) {
      let max = _.sortBy(this.times, 'num').reverse()[0].num;
      console.log(max);
      this.times.splice(e + 1, 0, {
        num: max + 1,
        text: max + 1 + ''
      });
    }
  };

  onLoad() {
    this.times = SM.get(SM.keys.timesArray);
  }
}
</script>
