<style lang="less">
@import "../style/calendar.less";
</style>
<template>
  <view class="main">
    <view class="demo5">
      <calendar
        calendar-style="calendar" header-style="header" board-style="board"
        binddayClick="dayClick"
        @nextMonth="nextMonth"
        days-color="{{daysStyle}}"></calendar>
    </view>
    <button @tap="goJGY">配置坚果云</button>
  </view>
</template>

<script>
import wepy from 'wepy';
import dav from '../api/davApi';
import { accountExists } from '../api/saveLocal';
import zip from 'lz-string';

const MONTHS = ['Jan.', 'Feb.', 'Mar.', 'Apr.', 'May.', 'June.', 'July.', 'Aug.', 'Sept.', 'Oct.', 'Nov.', 'Dec.'];
export default class Index extends wepy.page {
  config = {
    navigationBarTitleText: 'test',
    usingComponents: {
      calendar: 'plugin://calendar/calendar'
    }
  };

  data = {
    year: new Date().getFullYear(),      // 年份
    month: new Date().getMonth() + 1,    // 月份
    day: new Date().getDate(),
    str: MONTHS[new Date().getMonth()],  // 月份字符串
    daysStyle: null
  };

  computed = {};

  methods = {
    goJGY() {
      wx.navigateTo({
        url: 'setJGY'
      });
    },
    dayClick(e) {
      console.log(e.detail);
      let detail = e.detail;
      let item = {
        month: 'current',
        day: detail.day,
        color: 'white',
        background: '#58cc69'
      };
      console.log(item);
      this.daysStyle.push(item);
      this.$apply();
    },
    nextMonth(e) {
      console.log(e.detail);
      let detail = e.detail;
      this.circleToday(detail.currentYear, detail.currentMonth);
    },
    prevMonth() {

    },
    dateChange() {

    }
  };

  async onLoad() {
    if (await accountExists()) {
      this.text = await dav.getAsync();
      this.$apply();
    }
    this.test();
    this.circleToday();
  }

  // 圈出今天
  circleToday(year, month) {
    if ((!year && !month) || (year === this.year && month === this.month)) {
      this.daysStyle.push({
        month: 'current',
        day: this.day,
        background: '#ccc'
      });
    }
  }

  test() {
    const days_count = new Date(this.data.year, this.data.month, 0).getDate();
    let style = [];
    for (let i = 1; i <= days_count; i++) {
      const date = new Date(this.data.year, this.data.month - 1, i);
      if (date.getDay() == 0) {
        style.push({
          month: 'current', day: i, color: '#f488cd'
        });
      } else if (i == 12) {
        style.push({
          month: 'current', day: i, color: 'white', background: '#b49eeb'
        });
      } else if (i == 17) {
        style.push({
          month: 'current', day: i, color: 'white', background: '#f5a8f0'
        });
      } else if (i == 21) {
        style.push({
          month: 'current', day: i, color: 'white', background: '#aad4f5'
        });
      } else if (i == 25) {
        style.push({
          month: 'current', day: i, color: 'white', background: '#84e7d0'
        });
      } else {
        style.push({
          month: 'current', day: i, color: '#a18ada'
        });
      }
    }
    this.daysStyle = style;
    this.$apply();
  }
}
</script>
