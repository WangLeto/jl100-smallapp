<style lang="less">
@import "../style/setting.less";
</style>
<template>
  <view class="page__hd">
    <view class="page__title">设置</view>
    <view class="page__desc">进行你的设置</view>
  </view>
  <view class="page__bd">
    <view class="weui-cells__title">坚果云账号设置</view>
    <view class="weui-cells weui-cells_after-title">
      <view class="weui-cell weui-cell_input">
        <view class="weui-cell__hd">
          <view class="weui-label">账号</view>
        </view>
        <view class="weui-cell__bd">
          <input class="weui-input" type="text" placeholder="账号" @input="inputAccount" value="{{account}}"/>
        </view>
      </view>
      <view class="weui-cell weui-cell_input weui-cell_vcode">
        <view class="weui-cell__hd">
          <view class="weui-label">密码</view>
        </view>
        <view class="weui-cell__bd">
          <input class="weui-input" type="password" placeholder="应用密码" @input="inputPassword" value="{{password}}"/>
        </view>
      </view>
      <view class="weui-cell weui-cell_access weui-cell_link">
        <view class="weui-cell__bd" @tap="showTutorial">查看教程</view>
        <view class="weui-cell__ft weui-cell__ft_in-access"></view>
      </view>
    </view>
  </view>
  <view class="weui-cells__title switch">同步策略</view>
  <view class="weui-cells weui-cells_after-title">
    <view class="weui-cell weui-cell_switch">
      <view class="weui-cell__bd">手动上传</view>
      <view class="weui-cell__ft">
        <switch checked="{{manualSync}}" @change="changeSyncSwitch"/>
      </view>
    </view>
  </view>
  <view class="weui-media-box__info">开启后，手动以本地数据上传到云端，不适用于多端同步</view>
  <view class="button-sp-area">
    <button @tap="submit">验证账号</button>
  </view>
  <view class="page__bd shrink-bottom">
    <view class="weui-cells__title switch">日历视图</view>
    <view class="weui-cells weui-cells_after-title">
      <view class="weui-cell weui-cell_switch">
        <view class="weui-cell__bd">二元显示</view>
        <view class="weui-cell__ft">
          <switch checked="{{binaryShow}}" @change="changeBinarySwitch"/>
        </view>
      </view>
    </view>
    <view class="weui-media-box__info">在首页显示为0/有两种颜色，不细分次数</view>
  </view>
  <!--<view class="page__bd">-->
  <!--<view class="weui-cells__title">数量分级设置</view>-->
  <!--<view class="table">-->
  <!--<view class="header">-->
  <!--<view class="num">数量</view>-->
  <!--<view class="text">文字</view>-->
  <!--<view class="del">删除</view>-->
  <!--</view>-->
  <!--<view class="num">0</view>-->
  <!--<input type="text" value="{{times[0].text}}"/>-->
  <!--<block wx:for="{{timesSlice}}">-->
  <!--<view class="num">{{item.num}}</view>-->
  <!--<input type="text" class="text" value="{{item.text}}"/>-->
  <!--<button class="del">-</button>-->
  <!--</block>-->
  <!--</view>-->
  <!--<button>添加</button>-->
  <!--</view>-->

  <view class="page__bd">
    <view class="weui-cells__title">视图颜色设置</view>
    <view class="weui-cells weui-cells_after-title">
      <view class="weui-cell weui-cell_input" @tap="setColor(0)">
        <view class="weui-cell__hd">
          <view class="weui-label">0次</view>
        </view>
        <view class="showing-color" style="background: {{zeroColor}};"></view>
      </view>
      <view class="weui-cell weui-cell_input weui-cell_vcode" @tap="setColor(1)">
        <view class="weui-cell__hd">
          <view class="weui-label">高频</view>
        </view>
        <view class="showing-color" style="background: {{highColor}};"></view>
      </view>
    </view>
  </view>
  <view wx:if="{{showModal}}" class="modal-group">
    <view class="mask" @tap="hideModal"></view>
    <view class="modal-body">
      <image class="close-modal-btn" src="../assets/close.png" @tap="hideModal"></image>
      <view class="text">
        如果有对本小程序的宝贵建议，欢迎发送至邮箱 wleto3@163.com
      </view>
      <view class="copy-tip" @tap="copyEmail">复制邮箱</view>
    </view>
  </view>
  <view class="weui-footer">
    <view class="weui-footer__links">
      <view class="weui-footer__link" @tap="showModal">联系开发者</view>
    </view>
    <view class="weui-footer__text">Copyright © 不良日历</view>
  </view>
</template>
<script>
import wepy from 'wepy';
import saveLocal from '../api/saveLocal';
import tips from '../utils/tips';
import dav from '../api/davApi';
import settingManager from '../utils/settingManager';
import recordManager from '../utils/recordManager';
import { colorMaker } from '../utils/tools';

export default class Demo extends wepy.page {
  data = {
    account: '',
    password: '',
    manualSync: false,
    showModal: false,
    binaryShow: false,
    times: [{
      num: 0,
      text: '00'
    }, {
      num: 1,
      text: '11'
    }, {
      num: 2,
      text: '22'
    }]
  };
  computed = {
    timesSlice() {
      return this.times.slice(1);
    },
    zeroColor() {
      return colorMaker.color1();
    },
    highColor() {
      return colorMaker.color2();
    }
  };
  methods = {
    inputAccount(e) {
      this.account = e.detail.value;
    },
    inputPassword(e) {
      this.password = e.detail.value;
    },
    async submit() {
      if (this.account && this.password) {
        if (!(await dav.testAccount(this.account, this.password))) {
          tips.toastErr('账号或密码错误');
          return;
        }
        tips.toastSuccess('配置成功！');
        await saveLocal.saveAccountPassword(this.account, this.password);
        dav.delTestFile();
        let records = await recordManager.getRecords();
        console.log(records);
        this.$parent.globalData.tmpRecords = records;
        this.$parent.globalData.reloadData = true;
        wx.navigateBack();
      } else {
        tips.toastErr('未完成输入');
      }
    },
    showTutorial() {
      wx.navigateTo({
        url: 'tutorial'
      });
    },
    changeSyncSwitch() {
      this.manualSync = !this.manualSync;
      if (this.manualSync) {
        this.verifyAccount(settingManager.set, [settingManager.keys.manualSync, this.manualSync]);
      } else {
        settingManager.set(settingManager.keys.manualSync, this.manualSync);
      }
    },
    async changeBinarySwitch() {
      this.binaryShow = !this.binaryShow;
      await settingManager.set(settingManager.keys.binaryShow, this.binaryShow);
    },
    showModal() {
      this.showModal = true;
    },
    hideModal() {
      this.showModal = false;
    },
    copyEmail() {
      let that = this;
      wx.setClipboardData({
        data: 'wleto1@163.com',
        success: () => {
          that.showModal = false;
          that.$apply();
          tips.toastSuccess('已复制');
        }
      });
    },
    setColor(c) {
      let color1 = colorMaker.color1();
      let color2 = colorMaker.color2();
      switch (c) {
      case '0':
        wx.navigateTo({
          url: 'color?hex=' + color1 + '&num=1'
        });
        break;
      case '1':
        wx.navigateTo({
          url: 'color?hex=' + color2 + '&num=2'
        });
        break;
      }
    }
  };

  async verifyAccount(suc_callback, args) {
    let password = await saveLocal.getPassword();
    if (!!password) {
      suc_callback(...args);
    } else {
      tips.toastTip('请先完善账号', 2500);
      this.manualSync = false;
      this.$apply();
    }
  }

  async onLoad() {
    this.manualSync = await settingManager.get(settingManager.keys.manualSync);
    this.binaryShow = await settingManager.get(settingManager.keys.binaryShow);
    let account = await saveLocal.getAccount();
    let password = await saveLocal.getPassword();
    if (account && password) {
      this.account = account;
      this.password = password;
    }
  }
}
</script>
